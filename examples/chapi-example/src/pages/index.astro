---
import Layout from '@layouts/Layout.astro';
import Credentials from '@components/Credentials';
---

<Layout title="LearnCard CHAPI Example">
    <section id="modal-container"></section>

    <main class="w-full h-full flex flex-col justify-center items-center p-4">
        <header class="flex">
            <img
                class="h-36"
                src="https://cdn.filestackcontent.com/rotate=deg:exif/auto_image/7X2erX66T8Wq2IfvYIMt"
                alt="LearnCard"
            />
        </header>
        <div class="gap-2 mb-10">
            <img
                class="max-w-sm"
                src="https://cdn.filestackcontent.com/rotate=deg:exif/auto_image/PcSN5SODTgKForLpIdAa"
                alt="LearnCard"
            />
        </div>
        <h3 id="loading-wallet">Loading...</h3>

        <!--<section class="flex justify-center items-center gap-2">
            <p id="seed-display"></p>
            <button type="button" id="change-seed" class="bg-red-100 rounded px-4 border opacity-0"
                >Change</button
            >
        </section>
-->
        <section class="flex mb-4">
            <button
                disabled
                type="button"
                id="test-storage"
                class="bg-emerald-500 text-slate-100 rounded-md m-3 py-5 px-4 border opacity-0"
            >
                Issue via CHAPI
            </button>

            <button
                disabled
                type="button"
                id="test-multi-storage"
                class="bg-emerald-500 text-slate-100 rounded-md m-3 py-5 px-4 border opacity-0"
            >
                Issue Multiple via CHAPI
            </button>

            <button
                disabled
                type="button"
                id="test-storage-lcw"
                class="bg-emerald-500 text-slate-100 rounded-md m-3 py-5 px-4 border opacity-0"
            >
                Issue to LCW
            </button>
        </section>

        <Credentials client:only="react" />
    </main>
</Layout>

<script>
    import { initLearnCard } from '@learncard/init';
    import { _wallet, _seed } from '../stores/walletStore';

    const seed = _seed.get();

    if (!seed) window.location.href = 'login';

    const wallet = await initLearnCard({ seed });

    (window as any).wallet = wallet;

    _wallet.set(wallet);

    await wallet.invoke.installChapiHandler();

    const getTestCredential = (learnCard, name = "Test Credential", achievementType = "Achievement", issuanceDate = new Date().toISOString()) => {
        const vc = learnCard.invoke.newCredential({ type: 'jff2' });
        vc.name = name
        vc.credentialSubject.achievement.name = name
        vc.credentialSubject.achievement.achievementType = achievementType
        vc.issuanceDate = issuanceDate
        return vc;
    }

    const testStorage = async () => {
        // Test issuing from a different wallet using VC API
        const testWallet = await initLearnCard({ vcApi: true });

        const vc1 = getTestCredential(testWallet, "CHAPI Achievement", "Achievement");

        if (await testWallet.invoke.storeCredentialViaChapiDidAuth(vc1)) {
            window.location.reload();
        }
    };

    const testMultiStorage = async () => {
        // Test issuing from a different wallet using VC API
        const testWallet = await initLearnCard({ vcApi: true });

        const vc1 = getTestCredential(testWallet, "1: CHAPI Achievement", "Achievement");
        const vc2 = getTestCredential(testWallet, "2: CHAPI Course", "Course");
        const vc3 = getTestCredential(testWallet, "3: CHAPI ID", "PermanentResidentCard");
        const vc4 = getTestCredential(testWallet, "4: CHAPI Work", "ApprenticeshipCertificate");
        const vc5 = getTestCredential(testWallet, "5: CHAPI Social", "ext:CoolCat");
        const vc6 = getTestCredential(testWallet, "6: CHAPI Accomplishment", "ext:Project");
        const vc7 = getTestCredential(testWallet, "7: CHAPI Accomodation", "ext:PermissionSlip");

        if (await testWallet.invoke.storeCredentialViaChapiDidAuth([vc1, vc2, vc3, vc4, vc5, vc6, vc7])) {
            window.location.reload();
        }
    };

    const testLcwStorage = async () => {
        const testWallet = await initLearnCard({ vcApi: true });

        const vc = await testWallet.invoke.issueCredential(
            testWallet.invoke.newCredential({ type: 'jff2' })
        );
        const uri = await wallet.store.Ceramic.upload(vc); // Have to use "normal" wallet for now...

        const challenge = window.crypto.randomUUID();

        window.location.href = `org.dcconsortium://request?auth_type=bearer&issuer=jff&challenge=${challenge}&vc_request_url=https://bridge.learncard.com/exchanges/${uri}`;
    };

    const changeSeed = () => {
        _seed.set('');
        _wallet.set(null);
        window.location.href = 'login';
    };

    const loadingWallet = document.getElementById('loading-wallet') as HTMLElement;
    const storageButton = document.getElementById('test-storage') as HTMLButtonElement;
    const multiStorageButton = document.getElementById('test-multi-storage') as HTMLButtonElement;
    const lcwStorageButton = document.getElementById('test-storage-lcw') as HTMLButtonElement;
    const seedDisplay = document.getElementById('seed-display') as HTMLElement;
    //const changeSeedButton = document.getElementById('change-seed') as HTMLButtonElement;

    loadingWallet.remove();

    storageButton.classList.remove('opacity-0');
    storageButton.disabled = false;
    storageButton.addEventListener('click', testStorage);

    multiStorageButton.classList.remove('opacity-0');
    multiStorageButton.disabled = false;
    multiStorageButton.addEventListener('click', testMultiStorage);

    lcwStorageButton.classList.remove('opacity-0');
    lcwStorageButton.disabled = false;
    lcwStorageButton.addEventListener('click', testLcwStorage);

    //seedDisplay.innerHTML = `Your seed is: <span class="bg-white">${seed}</span>`;
    //changeSeedButton.classList.remove('opacity-0');
    //changeSeedButton.addEventListener('click', changeSeed);
</script>

