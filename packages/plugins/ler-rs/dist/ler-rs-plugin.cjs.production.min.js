"use strict";var R=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var u=(r,n)=>R(r,"name",{value:n,configurable:!0});var p=(r,n)=>{for(var e in n)R(r,e,{get:n[e],enumerable:!0})},V=(r,n,e,a)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of C(n))!h.call(r,i)&&i!==e&&R(r,i,{get:()=>n[i],enumerable:!(a=P(n,i))||a.enumerable});return r};var w=r=>V(R({},"__esModule",{value:!0}),r);var N={};p(N,{getLerRsPlugin:()=>m});module.exports=w(N);var v="https://www.w3.org/ns/credentials/v2",g="LERRS",E=u(r=>r==null?[]:Array.isArray(r)?r:[r],"toArray"),k=u(r=>r.map(n=>{let{narrative:e,verifiableCredential:a,position:i,employer:d,start:o,end:s,...l}=n,f={...l};if(d&&(f.organization={tradeName:d}),i||o||s){let c={};i&&(c.title=i),o&&(c.start=o),s&&(c.end=s),f.positionHistories=[c]}e&&(f.narrative=e);let t=a?[a]:[];return{...f,...t.length?{verifications:t}:{}}}),"buildEmploymentHistories"),S=u(r=>r.map(n=>{let{narrative:e,verifiableCredential:a,institution:i,start:d,end:o,degree:s,specializations:l,...f}=n,t={...f};i&&(t.institution=i),d&&(t.start=d),o&&(t.end=o),(s||l)&&(t.educationDegrees=[{...s?{name:s}:{},...l?{specializations:l}:{}}]),e&&(t.narrative=e);let c=a?[a]:[];return{...t,...c.length?{verifications:c}:{}}}),"buildEducationAndLearnings"),b=u(r=>r.map(n=>{let{narrative:e,verifiableCredential:a,...i}=n,d={...i};e&&(d.narrative=e);let o=a?[a]:[];return{...d,...o.length?{verifications:o}:{}}}),"buildCertifications"),m=u(r=>({name:"LER-RS",displayName:"LER-RS",description:"Create, package, and verify Learning & Employment Record Resume (LER-RS) credentials",methods:{createLerRecord:async(n,e)=>{let i=(e.learnCard??n).id.did(),d={id:e.person.id,name:{givenName:e.person.givenName,familyName:e.person.familyName,formattedName:`${e.person.givenName} ${e.person.familyName}`}},o=e.person.email?{emails:[{address:e.person.email}]}:void 0,s={person:d,...o?{communication:o}:{},skills:(e.skills||[]).map(f=>({name:f})),employmentHistories:e.workHistory?k(e.workHistory):void 0,educationAndLearnings:e.educationHistory?S(e.educationHistory):void 0,certifications:e.certifications?b(e.certifications):void 0,narratives:[]},l={"@context":[v],id:`urn:uuid:${crypto.randomUUID()}`,type:["VerifiableCredential",g],issuer:i,validFrom:new Date().toISOString(),credentialSubject:{id:e.person.id,ler:s}};return r.invoke.issueCredential(l,{proofPurpose:"assertionMethod"})},createLerPresentation:async(n,e)=>{let i=(e.learnCard??n).id.did();if(!e.credentials.length)throw new Error("createLerPresentation: credentials array must contain at least one credential");if(!e.credentials.some(s=>Array.isArray(s.type)&&s.type.includes(g)))throw new Error("createLerPresentation: credentials must include at least one LER-RS credential");let o={"@context":[v],type:["VerifiablePresentation"],holder:i,verifiableCredential:e.credentials.length===1?e.credentials[0]:e.credentials};return r.invoke.issuePresentation(o,{...e.domain?{domain:e.domain}:{},...e.challenge?{challenge:e.challenge}:{}})},verifyLerPresentation:async(n,{presentation:e,domain:a,challenge:i})=>{let d=await r.invoke.verifyPresentation(e,{...a?{domain:a}:{},...i?{challenge:i}:{}}),o={verified:d.errors.length===0,errors:d.errors.length?d.errors:void 0},s=[];if(typeof e!="string"){let l=e.holder,f=E(e.verifiableCredential);for(let t of f)try{let c=await r.invoke.verifyCredential(t),y=typeof t.issuer=="string"?t.issuer:t.issuer?.id,L=Array.isArray(t.type)&&t.type.includes(g)||!!l&&!!y&&y===l;s.push({credential:t,verified:c.errors.length===0,isSelfIssued:L,errors:c.errors.length?c.errors:void 0})}catch(c){s.push({credential:t,verified:!1,isSelfIssued:!1,errors:[c instanceof Error?c.message:"Unknown error verifying credential"]})}}return{verified:o.verified&&s.every(l=>l.verified||l.isSelfIssued),presentationResult:o,credentialResults:s}}}}),"getLerRsPlugin");
//# sourceMappingURL=ler-rs-plugin.cjs.production.min.js.map
