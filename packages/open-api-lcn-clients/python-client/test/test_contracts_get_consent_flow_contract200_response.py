# coding: utf-8

"""
    LearnCard Network Profile Service API

    This is the API for interacting with a LearnCard Network Profile Service

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.contracts_get_consent_flow_contract200_response import ContractsGetConsentFlowContract200Response

class TestContractsGetConsentFlowContract200Response(unittest.TestCase):
    """ContractsGetConsentFlowContract200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContractsGetConsentFlowContract200Response:
        """Test ContractsGetConsentFlowContract200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContractsGetConsentFlowContract200Response`
        """
        model = ContractsGetConsentFlowContract200Response()
        if include_optional:
            return ContractsGetConsentFlowContract200Response(
                contract = openapi_client.models.storage_resolve_200_response_any_of_any_of.storage_resolve_200_response_anyOf_anyOf(
                    read = openapi_client.models.storage_resolve_200_response_any_of_any_of_read.storage_resolve_200_response_anyOf_anyOf_read(
                        anonymize = True, 
                        credentials = openapi_client.models.storage_resolve_200_response_any_of_any_of_read_credentials.storage_resolve_200_response_anyOf_anyOf_read_credentials(
                            categories = {
                                'key' : openapi_client.models.storage_resolve_200_response_any_of_any_of_read_credentials_categories_value.storage_resolve_200_response_anyOf_anyOf_read_credentials_categories_value(
                                    required = True, )
                                }, ), 
                        personal = {
                            'key' : openapi_client.models.storage_resolve_200_response_any_of_any_of_read_credentials_categories_value.storage_resolve_200_response_anyOf_anyOf_read_credentials_categories_value(
                                required = True, )
                            }, ), 
                    write = openapi_client.models.storage_resolve_200_response_any_of_any_of_write.storage_resolve_200_response_anyOf_anyOf_write(), ),
                owner = openapi_client.models.boost_get_boost_recipients_200_response_inner_to.boost_getBoostRecipients_200_response_inner_to(
                    profile_id = '012', 
                    display_name = '', 
                    short_bio = '', 
                    bio = '', 
                    did = '', 
                    is_private = True, 
                    email = '', 
                    image = '', 
                    hero_image = '', 
                    website_link = '', 
                    is_service_profile = True, 
                    type = '', 
                    notifications_webhook = 'http', 
                    display = openapi_client.models.boost_get_boost_recipients_200_response_inner_to_display.boost_getBoostRecipients_200_response_inner_to_display(
                        background_color = '', 
                        background_image = '', 
                        fade_background_image = True, 
                        repeat_background_image = True, 
                        font_color = '', 
                        accent_color = '', 
                        accent_font_color = '', 
                        id_background_image = '', 
                        fade_id_background_image = True, 
                        id_background_color = '', 
                        repeat_id_background_image = True, ), ),
                name = '',
                subtitle = '',
                description = '',
                reason_for_accessing = '',
                image = '',
                uri = '',
                needs_guardian_consent = True,
                redirect_url = '',
                front_door_boost_uri = '',
                created_at = '',
                updated_at = '',
                expires_at = '',
                auto_boosts = [
                    ''
                    ]
            )
        else:
            return ContractsGetConsentFlowContract200Response(
                contract = openapi_client.models.storage_resolve_200_response_any_of_any_of.storage_resolve_200_response_anyOf_anyOf(
                    read = openapi_client.models.storage_resolve_200_response_any_of_any_of_read.storage_resolve_200_response_anyOf_anyOf_read(
                        anonymize = True, 
                        credentials = openapi_client.models.storage_resolve_200_response_any_of_any_of_read_credentials.storage_resolve_200_response_anyOf_anyOf_read_credentials(
                            categories = {
                                'key' : openapi_client.models.storage_resolve_200_response_any_of_any_of_read_credentials_categories_value.storage_resolve_200_response_anyOf_anyOf_read_credentials_categories_value(
                                    required = True, )
                                }, ), 
                        personal = {
                            'key' : openapi_client.models.storage_resolve_200_response_any_of_any_of_read_credentials_categories_value.storage_resolve_200_response_anyOf_anyOf_read_credentials_categories_value(
                                required = True, )
                            }, ), 
                    write = openapi_client.models.storage_resolve_200_response_any_of_any_of_write.storage_resolve_200_response_anyOf_anyOf_write(), ),
                owner = openapi_client.models.boost_get_boost_recipients_200_response_inner_to.boost_getBoostRecipients_200_response_inner_to(
                    profile_id = '012', 
                    display_name = '', 
                    short_bio = '', 
                    bio = '', 
                    did = '', 
                    is_private = True, 
                    email = '', 
                    image = '', 
                    hero_image = '', 
                    website_link = '', 
                    is_service_profile = True, 
                    type = '', 
                    notifications_webhook = 'http', 
                    display = openapi_client.models.boost_get_boost_recipients_200_response_inner_to_display.boost_getBoostRecipients_200_response_inner_to_display(
                        background_color = '', 
                        background_image = '', 
                        fade_background_image = True, 
                        repeat_background_image = True, 
                        font_color = '', 
                        accent_color = '', 
                        accent_font_color = '', 
                        id_background_image = '', 
                        fade_id_background_image = True, 
                        id_background_color = '', 
                        repeat_id_background_image = True, ), ),
                name = '',
                uri = '',
                created_at = '',
                updated_at = '',
        )
        """

    def testContractsGetConsentFlowContract200Response(self):
        """Test ContractsGetConsentFlowContract200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
