# coding: utf-8

"""
    LearnCloud Network API

    API for interacting with LearnCloud Network

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.auth_grants_get_auth_grants200_response_inner import AuthGrantsGetAuthGrants200ResponseInner

class TestAuthGrantsGetAuthGrants200ResponseInner(unittest.TestCase):
    """AuthGrantsGetAuthGrants200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthGrantsGetAuthGrants200ResponseInner:
        """Test AuthGrantsGetAuthGrants200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthGrantsGetAuthGrants200ResponseInner`
        """
        model = AuthGrantsGetAuthGrants200ResponseInner()
        if include_optional:
            return AuthGrantsGetAuthGrants200ResponseInner(
                id = '',
                name = '',
                description = '',
                challenge = 'auth-grant:0123456789',
                status = 'revoked',
                scope = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AuthGrantsGetAuthGrants200ResponseInner(
                id = '',
                name = '',
                challenge = 'auth-grant:0123456789',
                status = 'revoked',
                scope = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testAuthGrantsGetAuthGrants200ResponseInner(self):
        """Test AuthGrantsGetAuthGrants200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
