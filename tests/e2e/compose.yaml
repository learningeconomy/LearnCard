services:
    brain:
        image: welibrary/lcn-brain-service
        build:
            context: ../../
            dockerfile: services/learn-card-network/brain-service/Dockerfile.local

        expose:
            - 4000
        ports:
            - '4000:4000'

        depends_on:
            neo4j:
                condition: service_healthy
            redis:
                condition: service_started
            elasticmq:
                condition: service_started
            signing:
                condition: service_started

        networks:
            - learn-card

        extra_hosts:
            - 'localhost:host-gateway'

        volumes:
            - ../../services/learn-card-network/brain-service/src:/app/services/learn-card-network/brain-service/src

        environment:
            PORT: 4000

            SEED: a

            IS_OFFLINE: true
            IS_E2E_TEST: true

            NEO4J_URI: ${NEO4J_URI:-bolt://neo4j:7687}
            NEO4J_USERNAME: ${NEO4J_USERNAME:-neo4j}
            NEO4J_PASSWORD: ${NEO4J_PASSWORD:-this-is-the-password}

            REDIS_HOST: ${REDIS_HOST:-redis}
            REDIS_PORT: ${REDIS_PORT:-6379}

            AWS_REGION: ${AWS_REGION:-us-east-1}
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-notARealKey}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-notARealSecretKey}

            NOTIFICATIONS_QUEUE_POLL_URL: ${NOTIFICATIONS_QUEUE_POLL_URL:-http://elasticmq:9324/notifications}
            NOTIFICATIONS_QUEUE_URL: ${NOTIFICATIONS_QUEUE_URL:-http://elasticmq:9324/notifications}

            SKILLS_PROVIDER_BASE_URL: ${SKILLS_PROVIDER_BASE_URL:-http://localhost:4000}
            SKILLS_PROVIDER_API_KEY: ${SKILLS_PROVIDER_API_KEY:-notARealKey}

    cloud:
        image: welibrary/lcn-cloud-service
        build:
            context: ../../
            dockerfile: services/learn-card-network/learn-cloud-service/Dockerfile.local

        expose:
            - 4100
        ports:
            - '4100:4100'

        depends_on:
            - mongodb
            - redis2

        networks:
            - learn-card

        extra_hosts:
            - 'localhost:host-gateway'

        volumes:
            - ../../services/learn-card-network/learn-cloud-service/src:/app/services/learn-card-network/learn-cloud-service/src

        environment:
            PORT: 4100

            LEARN_CLOUD_SEED: b

            LEARN_CLOUD_MONGO_URI: ${LEARN_CLOUD_MONGO_URI:-mongodb://mongodb:27017?ssl=false&replicaSet=rs0}
            LEARN_CLOUD_MONGO_DB_NAME: ${LEARN_CLOUD_MONGO_DB_NAME:-learn-cloud}

            REDIS_HOST: redis2
            REDIS_PORT: 6379

            XAPI_ENDPOINT: http://lrs:8080/xapi
            XAPI_USERNAME: test-api-key
            XAPI_PASSWORD: test-api-secret

            SERVER_URL: http://cloud:4100
            JWT_SIGNING_KEY: test

    signing:
        image: welibrary/simple-signing-service
        build:
            context: ../../
            dockerfile: services/learn-card-network/simple-signing-service/Dockerfile.local

        expose:
            - 4200
        ports:
            - '4200:4200'

        depends_on:
            - mongodb
            - redis3

        networks:
            - learn-card

        extra_hosts:
            - 'localhost:host-gateway'

        volumes:
            - ../../services/learn-card-network/simple-signing-service/src:/app/services/learn-card-network/simple-signing-service/src

        environment:
            PORT: 4200

            IS_OFFLINE: true

            SEED: c
            AUTHORIZED_DIDS: did:web:localhost%3A4000

            MONGO_URI: ${MONGO_URI:-mongodb://mongodb:27017?ssl=false&replicaSet=rs0}
            MONGO_DB_NAME: ${MONGO_DB_NAME:-simple-signing}

            REDIS_HOST: redis3
            REDIS_PORT: 6379

    neo4j:
        image: neo4j:latest
        ports:
            - '7687:7687'
            - '7474:7474'
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1',
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        environment:
            NEO4J_AUTH: none
        networks:
            - learn-card

    redis:
        image: redis:alpine
        environment:
            - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD:-yes}
            - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
        ports:
            - '6379:${REDIS_PORT:-6379}'
        networks:
            - learn-card

    redis2:
        image: redis:alpine
        environment:
            - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD:-yes}
            - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
        ports:
            - '6380:6379'
        networks:
            - learn-card

    redis3:
        image: redis:alpine
        environment:
            - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD:-yes}
            - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
        ports:
            - '6381:6379'
        networks:
            - learn-card

    mongodb:
        command:
            [
                '--replSet',
                'rs0',
                '--bind_ip_all',
                '--port',
                '27017',
                '--quiet',
                '--logpath',
                '/var/log/mongodb/mongod.log',
            ]
        image: mongo:latest
        expose:
            - 27017
        ports:
            - 27017:27017
        extra_hosts:
            - 'localhost:host-gateway'
        healthcheck:
            test: >
                mongosh --host localhost --port 27017 --quiet --eval "try { rs.status().ok } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]}) }"
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        networks:
            - learn-card

    elasticmq:
        image: softwaremill/elasticmq-native
        expose:
            - 9324
        ports:
            - '9324:9324'
        networks:
            - learn-card

    postgres:
        image: postgres
        networks:
            - learn-card
        environment:
            POSTGRES_USER: lrsql_user
            POSTGRES_PASSWORD: lrsql_password
            POSTGRES_DB: lrsql_db
        ports:
            - '5432:5432'

    lrs:
        image: yetanalytics/lrsql:latest
        command:
            - /lrsql/bin/run_postgres.sh
        networks:
            - learn-card
        extra_hosts:
            - 'localhost:host-gateway'
        ports:
            - '8080:8080'
        depends_on:
            - postgres
            - cloud
        environment:
            LRSQL_API_KEY_DEFAULT: test-api-key
            LRSQL_API_SECRET_DEFAULT: test-api-secret
            LRSQL_ADMIN_USER_DEFAULT: test_username
            LRSQL_ADMIN_PASS_DEFAULT: test_password
            LRSQL_DB_HOST: postgres
            LRSQL_DB_NAME: lrsql_db
            LRSQL_DB_USER: lrsql_user
            LRSQL_DB_PASSWORD: lrsql_password

            LRSQL_OIDC_ISSUER: http://cloud:4100
            LRSQL_OIDC_AUDIENCE: http://lrs:8080/xapi
            LRSQL_OIDC_SCOPE_PREFIX: 'lrs:'

            # If Postgres is too slow to start, increase this
            LRSQL_POOL_INITIALIZATION_FAIL_TIMEOUT: 10000
            LRSQL_ALLOW_ALL_ORIGINS: true

networks:
    learn-card:
        driver: bridge
