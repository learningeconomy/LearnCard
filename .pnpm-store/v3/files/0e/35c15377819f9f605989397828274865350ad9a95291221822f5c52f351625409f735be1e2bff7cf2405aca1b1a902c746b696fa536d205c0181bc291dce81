{"version":3,"file":"index.umd.js","sources":["../src/spec.ts","../src/utils.ts","../src/chain.ts","../src/account.ts","../src/assetName.ts","../src/assetType.ts","../src/assetId.ts"],"sourcesContent":["import { IdentifierSpec } from \"./types\";\n\nconst CAIP2: IdentifierSpec = {\n  name: \"chainId\",\n  regex: \"[-:a-zA-Z0-9]{5,41}\",\n  parameters: {\n    delimiter: \":\",\n    values: {\n      0: {\n        name: \"namespace\",\n        regex: \"[-a-z0-9]{3,8}\",\n      },\n      1: {\n        name: \"reference\",\n        regex: \"[-a-zA-Z0-9]{1,32}\",\n      },\n    },\n  },\n};\n\nconst CAIP10: IdentifierSpec = {\n  name: \"accountId\",\n  regex: \"[-:a-zA-Z0-9]{7,106}\",\n  parameters: {\n    delimiter: \":\",\n    values: {\n      0: {\n        name: \"namespace\",\n        regex: \"[-a-z0-9]{3,8}\",\n      },\n      1: {\n        name: \"reference\",\n        regex: \"[-a-zA-Z0-9]{1,32}\",\n      },\n      2: {\n        name: \"address\",\n        regex: \"[a-zA-Z0-9]{1,64}\",\n      },\n    },\n  },\n};\n\n// represents namespace:reference in CAIP-19\nconst AssetName: IdentifierSpec = {\n  name: \"assetName\",\n  regex: \"[-:a-zA-Z0-9]{5,73}\",\n  parameters: {\n    delimiter: \":\",\n    values: {\n      0: {\n        name: \"namespace\",\n        regex: \"[-a-z0-9]{3,8}\",\n      },\n      1: {\n        name: \"reference\",\n        regex: \"[-a-zA-Z0-9]{1,64}\",\n      },\n    },\n  },\n};\n\nconst CAIP19AssetType: IdentifierSpec = {\n  name: \"assetType\",\n  regex: \"[-:a-zA-Z0-9]{11,115}\",\n  parameters: {\n    delimiter: \"/\",\n    values: {\n      0: CAIP2,\n      1: AssetName,\n    },\n  },\n};\n\nconst CAIP19AssetId: IdentifierSpec = {\n  name: \"assetId\",\n  regex: \"[-:a-zA-Z0-9]{13,148}\",\n  parameters: {\n    delimiter: \"/\",\n    values: {\n      0: CAIP2,\n      1: AssetName,\n      2: {\n        name: \"tokenId\",\n        regex: \"[-a-zA-Z0-9]{1,32}\",\n      },\n    },\n  },\n};\n\nexport const CAIP = {\n  \"2\": CAIP2,\n  \"10\": CAIP10,\n  \"19\": {\n    assetName: AssetName,\n    assetType: CAIP19AssetType,\n    assetId: CAIP19AssetId,\n  },\n};\n","import { IdentifierSpec, Params } from \"./types\";\n\nexport function splitParams(id: string, spec: IdentifierSpec): string[] {\n  return id.split(spec.parameters.delimiter);\n}\n\nexport function getParams<T>(id: string, spec: IdentifierSpec): T {\n  const arr = splitParams(id, spec);\n  const params = {};\n  arr.forEach((value, index) => {\n    params[spec.parameters.values[index].name] = value;\n  });\n  return params as T;\n}\n\nexport function joinParams(params: Params, spec: IdentifierSpec): string {\n  return Object.values(spec.parameters.values)\n    .map(parameter => {\n      const param = params[parameter.name];\n      return typeof param === \"string\"\n        ? param\n        : joinParams(param, parameter as IdentifierSpec);\n    })\n    .join(spec.parameters.delimiter);\n}\n\nexport function isValidId(id: string, spec: IdentifierSpec): boolean {\n  // console.log(\"id\", id);\n  // console.log(\"spec\", spec);\n  // console.log(\"before regex\");\n  if (!new RegExp(spec.regex).test(id)) return false;\n  // console.log(\"after regex\");\n  // console.log(\"before split\");\n  const params = splitParams(id, spec);\n  // console.log(\"after split\");\n  // console.log(\"params\", params);\n  // console.log(\"before length\");\n  if (params.length !== Object.keys(spec.parameters.values).length)\n    return false;\n  // console.log(\"after length\");\n  // console.log(\"before matches\");\n  const matches = params\n    .map((param, index) =>\n      new RegExp(spec.parameters.values[index].regex).test(param)\n    )\n    .filter(x => !!x);\n  if (matches.length !== params.length) return false;\n  // console.log(\"after matches\");\n  return true;\n}\n","import { CAIP } from \"./spec\";\nimport { IdentifierSpec } from \"./types\";\nimport { isValidId, joinParams, getParams } from \"./utils\";\n\nexport interface ChainIdParams {\n  namespace: string;\n  reference: string;\n}\n\nexport class ChainId {\n  public static spec: IdentifierSpec = CAIP[\"2\"];\n\n  public static parse(id: string): ChainIdParams {\n    if (!isValidId(id, this.spec)) {\n      throw new Error(`Invalid ${this.spec.name} provided: ${id}`);\n    }\n    return new ChainId(getParams<ChainIdParams>(id, this.spec)).toJSON();\n  }\n\n  public static format(params: ChainIdParams): string {\n    return joinParams(params as any, this.spec);\n  }\n\n  public namespace: string;\n  public reference: string;\n\n  constructor(params: ChainIdParams | string) {\n    if (typeof params === \"string\") {\n      params = ChainId.parse(params);\n    }\n\n    this.namespace = params.namespace;\n    this.reference = params.reference;\n  }\n\n  public toString(): string {\n    return ChainId.format(this.toJSON());\n  }\n\n  public toJSON(): ChainIdParams {\n    return {\n      namespace: this.namespace,\n      reference: this.reference,\n    };\n  }\n}\n","import { ChainId, ChainIdParams } from \"./chain\";\nimport { CAIP } from \"./spec\";\nimport { IdentifierSpec } from \"./types\";\nimport { isValidId, joinParams, getParams } from \"./utils\";\n\nexport interface AccountIdSplitParams extends ChainIdParams {\n  address: string;\n}\nexport interface AccountIdParams {\n  chainId: string | ChainIdParams;\n  address: string;\n}\n\nexport class AccountId {\n  public static spec: IdentifierSpec = CAIP[\"10\"];\n\n  public static parse(id: string): AccountIdParams {\n    if (!isValidId(id, this.spec)) {\n      throw new Error(`Invalid ${this.spec.name} provided: ${id}`);\n    }\n    const { namespace, reference, address } = getParams<AccountIdSplitParams>(\n      id,\n      this.spec\n    );\n    const chainId = new ChainId({ namespace, reference });\n    return new AccountId({ chainId, address }).toJSON();\n  }\n\n  public static format(params: AccountIdParams): string {\n    const chainId = new ChainId(params.chainId);\n    const splitParams: AccountIdSplitParams = {\n      ...chainId.toJSON(),\n      address: params.address,\n    };\n    return joinParams(splitParams as any, this.spec);\n  }\n\n  public chainId: ChainId;\n  public address: string;\n\n  constructor(params: AccountIdParams | string) {\n    if (typeof params === \"string\") {\n      params = AccountId.parse(params);\n    }\n\n    this.chainId = new ChainId(params.chainId);\n    this.address = params.address;\n  }\n\n  public toString(): string {\n    return AccountId.format(this.toJSON());\n  }\n\n  public toJSON(): AccountIdParams {\n    return {\n      chainId: this.chainId.toJSON(),\n      address: this.address,\n    };\n  }\n}\n","import { CAIP } from \"./spec\";\nimport { IdentifierSpec } from \"./types\";\nimport { isValidId, joinParams, getParams } from \"./utils\";\n\nexport interface AssetNameParams {\n  namespace: string;\n  reference: string;\n}\n\nexport class AssetName {\n  public static spec: IdentifierSpec = CAIP[\"19\"].assetName;\n\n  public static parse(id: string): AssetNameParams {\n    if (!isValidId(id, this.spec)) {\n      throw new Error(`Invalid ${this.spec.name} provided: ${id}`);\n    }\n    return new AssetName(getParams<AssetNameParams>(id, this.spec)).toJSON();\n  }\n\n  public static format(params: AssetNameParams): string {\n    return joinParams(params as any, this.spec);\n  }\n\n  public namespace: string;\n  public reference: string;\n\n  constructor(params: AssetNameParams | string) {\n    if (typeof params === \"string\") {\n      params = AssetName.parse(params);\n    }\n\n    this.namespace = params.namespace;\n    this.reference = params.reference;\n  }\n\n  public toString(): string {\n    return AssetName.format(this.toJSON());\n  }\n\n  public toJSON(): AssetNameParams {\n    return {\n      namespace: this.namespace,\n      reference: this.reference,\n    };\n  }\n}\n","import { AssetName, AssetNameParams } from \"./assetName\";\nimport { ChainId, ChainIdParams } from \"./chain\";\nimport { CAIP } from \"./spec\";\nimport { IdentifierSpec } from \"./types\";\nimport { isValidId, joinParams, getParams } from \"./utils\";\n\nexport interface AssetTypeParams {\n  chainId: string | ChainIdParams;\n  assetName: string | AssetNameParams;\n}\n\nexport class AssetType {\n  public static spec: IdentifierSpec = CAIP[\"19\"].assetType;\n\n  public static parse(id: string): AssetTypeParams {\n    if (!isValidId(id, this.spec)) {\n      throw new Error(`Invalid ${this.spec.name} provided: ${id}`);\n    }\n    return new AssetType(getParams<AssetTypeParams>(id, this.spec)).toJSON();\n  }\n\n  public static format(params: AssetTypeParams): string {\n    return joinParams(params as any, this.spec);\n  }\n\n  public chainId: ChainId;\n  public assetName: AssetName;\n\n  constructor(params: AssetTypeParams | string) {\n    if (typeof params === \"string\") {\n      params = AssetType.parse(params);\n    }\n\n    this.chainId = new ChainId(params.chainId);\n    this.assetName = new AssetName(params.assetName);\n  }\n\n  public toString(): string {\n    return AssetType.format(this.toJSON());\n  }\n\n  public toJSON(): AssetTypeParams {\n    return {\n      chainId: this.chainId.toJSON(),\n      assetName: this.assetName,\n    };\n  }\n}\n","import { AssetName, AssetNameParams } from \"./assetName\";\nimport { ChainId, ChainIdParams } from \"./chain\";\nimport { CAIP } from \"./spec\";\nimport { IdentifierSpec } from \"./types\";\nimport { isValidId, joinParams, getParams } from \"./utils\";\n\nexport interface AssetIdParams {\n  chainId: string | ChainIdParams;\n  assetName: string | AssetNameParams;\n  tokenId: string;\n}\n\nexport class AssetId {\n  public static spec: IdentifierSpec = CAIP[\"19\"].assetId;\n\n  public static parse(id: string): AssetIdParams {\n    if (!isValidId(id, this.spec)) {\n      throw new Error(`Invalid ${this.spec.name} provided: ${id}`);\n    }\n    return new AssetId(getParams<AssetIdParams>(id, this.spec)).toJSON();\n  }\n\n  public static format(params: AssetIdParams): string {\n    return joinParams(params as any, this.spec);\n  }\n\n  public chainId: ChainId;\n  public assetName: AssetName;\n  public tokenId: string;\n\n  constructor(params: AssetIdParams | string) {\n    if (typeof params === \"string\") {\n      params = AssetId.parse(params);\n    }\n\n    this.chainId = new ChainId(params.chainId);\n    this.assetName = new AssetName(params.assetName);\n    this.tokenId = params.tokenId;\n  }\n\n  public toString(): string {\n    return AssetId.format(this.toJSON());\n  }\n\n  public toJSON(): AssetIdParams {\n    return {\n      chainId: this.chainId.toJSON(),\n      assetName: this.assetName.toJSON(),\n      tokenId: this.tokenId,\n    };\n  }\n}\n"],"names":["CAIP2","name","regex","parameters","delimiter","values","CAIP10","AssetName","CAIP19AssetType","CAIP19AssetId","CAIP","assetName","assetType","assetId","splitParams","id","spec","split","getParams","arr","params","forEach","value","index","joinParams","Object","map","parameter","param","join","isValidId","RegExp","test","length","keys","matches","filter","x","ChainId","parse","namespace","reference","Error","toJSON","format","toString","AccountId","chainId","address","AssetType","AssetId","tokenId"],"mappings":"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"}