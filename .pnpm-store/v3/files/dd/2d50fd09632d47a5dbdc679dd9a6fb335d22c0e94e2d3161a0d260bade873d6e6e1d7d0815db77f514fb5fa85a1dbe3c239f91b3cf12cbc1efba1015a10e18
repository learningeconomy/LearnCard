import _defineProperty from"@babel/runtime/helpers/defineProperty";import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _typeof from"@babel/runtime/helpers/typeof";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}import*as React from"react";import{fromEntries}from"./fromEntries";import{isReactInstanceOf}from"./isReactInstanceOf";import{createInstanceIfDefined}from"./createInstanceIfDefined";import{arrayify}from"./arrayify";export var SLOT_KEY="_SLOT_";export function getSlotToken(child){if(!child){return}return child.type?child.type[SLOT_KEY]:child[SLOT_KEY]}export function isSlotOf(child,identifier){var token=_typeof(identifier)==="symbol"?identifier:getSlotToken(identifier);return token?getSlotToken(child)===token:isReactInstanceOf(child,identifier)}export var forwardWithSlots=function forwardWithSlots(Component){var forwarded=React.forwardRef(Component);return forwarded};export function createSlots(props,componentMapping){var omit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var otherChildren=[];var slotNames=Object.keys(componentMapping);var components=fromEntries(slotNames.map(function(slot){return[slot,arrayify(componentMapping[slot])]}));var slots=fromEntries(slotNames.map(function(prop){var SlotComp=components[prop][0];var slotProps=props[prop];if(_typeof(SlotComp)==="symbol"&&slotProps){throw new Error("Cannot create instance for ".concat(prop," when using slot tokens. Use children instead."))}return[prop,createInstanceIfDefined(slotProps,SlotComp)]}));var passThroughProps=fromEntries(Object.entries(props).filter(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];return componentMapping[key]===undefined&&!omit.includes(key)}));React.Children.forEach(props.children,function(child){var slotName=slotNames.find(function(propName){return components[propName].find(function(comp){return isSlotOf(child,comp)})});if(!slotName){return otherChildren.push(child)}var slot=slots[slotName];slots[slotName]=slot?[].concat(_toConsumableArray(arrayify(slot)),_toConsumableArray(arrayify(child))):child});return _objectSpread(_objectSpread(_objectSpread({},passThroughProps),slots),{},{children:otherChildren.length?otherChildren:undefined})}
//# sourceMappingURL=createSlots.js.map