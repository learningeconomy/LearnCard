{"version":3,"file":"WritableMetricStorage.js","sourceRoot":"","sources":["../../../src/state/WritableMetricStorage.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAeH,MAAM,OAAO,yBAAyB;IACpC,MAAM,CAAC,MAAc,EAAE,WAA6B,EAAE,QAAiB,IAAS,CAAC;CAClF","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\n\n/**\n * Internal interface.\n *\n * Stores {@link MetricData} and allows synchronous writes of measurements.\n */\nexport interface WritableMetricStorage {\n  /** Records a measurement. */\n  record(value: number, attributes: MetricAttributes, context: Context): void;\n}\n\nexport class NoopWritableMetricStorage implements WritableMetricStorage {\n  record(_value: number, _attributes: MetricAttributes, _context: Context): void {}\n}\n"]}