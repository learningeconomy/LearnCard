{"version":3,"sources":["portal.tsx"],"names":["React","ReactDOM","PortalContext","createContext","undefined","useIsomorphicLayoutEffect","window","useEffect","useLayoutEffect","usePortal","containerRef","useState","rootElemRef","rootElemRefSet","context","useContext","document","createElement","parent","current","body","appendChild","parentNode","removeChild","Portal","forwardRef","props","ref","children","portalElement","portal","createPortal"],"mappings":"iEAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,WAA1B,CAEA,GAAMC,CAAAA,aAAa,CAAGF,KAAK,CAACG,aAAN,CAA6CC,SAA7C,CAAtB,CAEA,GAAMC,CAAAA,yBAAyB,CAC7B,MAAOC,CAAAA,MAAP,GAAkB,WAAlB,CAAgCN,KAAK,CAACO,SAAtC,CAAkDP,KAAK,CAACQ,eAD1D,CAQA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,YAAD,CAAwD,qBAGlCV,KAAK,CAACW,QAAN,CACpC,IADoC,CAHkC,oDAGjEC,WAHiE,qBAGpDC,cAHoD,qBAMxE,GAAMC,CAAAA,OAAO,CAAGd,KAAK,CAACe,UAAN,CAAiBb,aAAjB,CAAhB,CAGAG,yBAAyB,CAAC,UAAM,CAC9B,GAAI,MAAOW,CAAAA,QAAP,GAAoB,WAAxB,CAAqC,CACnCH,cAAc,CAACG,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAD,CACf,CACF,CAJwB,CAItB,EAJsB,CAAzB,CAMAjB,KAAK,CAACO,SAAN,CAAgB,UAAM,CACpB,GAAI,CAACK,WAAL,CAAkB,CAChB,MACD,CAED,GAAMM,CAAAA,MAAM,CACVJ,OAAO,EAAKJ,YAAY,EAAIA,YAAY,CAACS,OAAzC,EAAqDH,QAAQ,CAACI,IADhE,CAGAF,MAAM,CAACG,WAAP,CAAmBT,WAAnB,EAEA,MAAO,WAAM,CACX,GAAIA,WAAW,EAAIA,WAAW,CAACU,UAA/B,CAA2C,CACzCV,WAAW,CAACU,UAAZ,CAAuBC,WAAvB,CAAmCX,WAAnC,CACD,CACF,CACF,CAfD,CAeG,CAACA,WAAD,CAAcF,YAAd,CAA4BI,OAA5B,CAfH,EAiBA,MAAOF,CAAAA,WACR,CAjCD,CAoDA,MAAO,IAAMY,CAAAA,MAAM,CAAGxB,KAAK,CAACyB,UAAN,CACpB,SAACC,KAAD,CAAqBC,GAArB,CAAqD,IAC3CjB,CAAAA,YAD2C,CAChBgB,KADgB,CAC3ChB,YAD2C,CAC7BkB,QAD6B,CAChBF,KADgB,CAC7BE,QAD6B,CAEnD,GAAMC,CAAAA,aAAa,CAAGpB,SAAS,CAACC,YAAD,CAA/B,CAGA,GAAI,CAACmB,aAAL,CAAoB,CAClB,MAAO,KACR,CAED,GAAI,MAAOF,CAAAA,GAAP,GAAe,UAAnB,CAA+B,CAC7BA,GAAG,CAACE,aAAD,CACJ,CAFD,IAEO,IAAIF,GAAJ,CAAS,CAEbA,GAAD,CAA6CR,OAA7C,CAAuDU,aACxD,CAED,GAAMC,CAAAA,MAAM,CAAG7B,QAAQ,CAAC8B,YAAT,CACb,oBAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAEF,aAA/B,EACGD,QADH,CADa,CAIbC,aAJa,CAAf,CAOA,MAAOC,CAAAA,MACR,CAzBmB,CAAf","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nconst PortalContext = React.createContext<HTMLElement | undefined>(undefined);\n\nconst useIsomorphicLayoutEffect =\n  typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\n/**\n * Create a div to use as a portal.\n *\n * @param containerRef - A dom node to attach the portal to, defaults to body\n */\nconst usePortal = (containerRef?: React.MutableRefObject<HTMLElement>) => {\n  // Container to render portal into\n  // Uses state because the Portal component needs to re-render once the portal element is created\n  const [rootElemRef, rootElemRefSet] = React.useState<HTMLElement | null>(\n    null\n  );\n  const context = React.useContext(PortalContext);\n\n  // SSR guard\n  useIsomorphicLayoutEffect(() => {\n    if (typeof document !== 'undefined') {\n      rootElemRefSet(document.createElement('div'));\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!rootElemRef) {\n      return;\n    }\n\n    const parent =\n      context || (containerRef && containerRef.current) || document.body;\n\n    parent.appendChild(rootElemRef);\n\n    return () => {\n      if (rootElemRef && rootElemRef.parentNode) {\n        rootElemRef.parentNode.removeChild(rootElemRef);\n      }\n    };\n  }, [rootElemRef, containerRef, context]);\n\n  return rootElemRef;\n};\n\ninterface PortalProps {\n  /** A ref to the portal's container */\n  containerRef?: React.MutableRefObject<HTMLElement>;\n  /** The content to render in a portal */\n  children: React.ReactNode;\n}\n\n/**\n * Render an element inside of a portal.\n *\n * @example\n * const Example = () => (\n *   <Portal>\n *     {'I am rendered at the end of the dom'}\n *   </Portal>\n * )\n */\nexport const Portal = React.forwardRef(\n  (props: PortalProps, ref: React.Ref<HTMLElement>) => {\n    const { containerRef, children } = props;\n    const portalElement = usePortal(containerRef);\n\n    // SSR Guard\n    if (!portalElement) {\n      return null;\n    }\n\n    if (typeof ref === 'function') {\n      ref(portalElement);\n    } else if (ref) {\n      // eslint-disable-next-line no-param-reassign\n      (ref as React.MutableRefObject<HTMLElement>).current = portalElement;\n    }\n\n    const portal = ReactDOM.createPortal(\n      <PortalContext.Provider value={portalElement}>\n        {children}\n      </PortalContext.Provider>,\n      portalElement\n    );\n\n    return portal;\n  }\n);\n"]}
