{"version":3,"sources":["ObjectValue.tsx"],"names":["React","useState","useEffect","makeClass","useTheme","isObject","getPromiseState","styles","buildValue","key","value","valueClass","showKey","depth","computedKey","includes","isRoot","text","ObjectValue","props","ast","theme","colorScheme","className","html","themeClass","asyncValue","setAsyncValue","Promise","waitForPromiseResult","promise","String","number","boolean","string","undefined","toString","name","null","Array","isArray","length","Date","RegExp","regex","Error","error","constructor","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport makeClass from \"clsx\";\nimport { ThemeableElement, useTheme } from \"@devtools-ds/themes\";\nimport { ASTNode, isObject, getPromiseState } from \"@devtools-ds/object-parser\";\nimport styles from \"./ObjectInspector.css\";\n\ninterface ObjectValueProps extends ThemeableElement<\"span\"> {\n  /** Type of object. */\n  ast: ASTNode;\n  /** Whether or not to show the key */\n  showKey: boolean;\n}\n\n/**\n * Build the key and value spans\n *\n * @param key - The key string\n * @param value - The value string\n * @param valueClass - The class to apply to the value\n * @param showKey - Whether or not to show the key with the value\n * @param depth - Current depth (so we don't put a key on root)\n */\nconst buildValue = (\n  key: string,\n  value: React.ReactNode,\n  valueClass: string,\n  showKey: boolean,\n  depth: number\n) => {\n  const computedKey = key.includes(\"-\") ? `\"${key}\"` : key;\n  const isRoot = depth <= 0;\n  return (\n    <span className={styles.text}>\n      {!isRoot && showKey && (\n        <>\n          <span className={styles.key}>{computedKey}</span>\n          <span>:&nbsp;</span>\n        </>\n      )}\n\n      <span className={valueClass}>{value}</span>\n    </span>\n  );\n};\n\n/** Display a leaf key-value pair with appropriate styles. */\nexport const ObjectValue = (props: ObjectValueProps) => {\n  const { ast, theme, showKey, colorScheme, className, ...html } = props;\n  const { themeClass } = useTheme({ theme, colorScheme }, styles);\n  const [asyncValue, setAsyncValue] = useState(<span />);\n  let value = <span />;\n\n  /** Handle async types once */\n  useEffect(() => {\n    if (ast.value instanceof Promise) {\n      /** Async function to wait for Promise.race */\n      const waitForPromiseResult = async (promise: Promise<any>) => {\n        setAsyncValue(\n          buildValue(\n            ast.key,\n            `Promise { \"${await getPromiseState(promise)}\" }`,\n            styles.key,\n            showKey,\n            ast.depth\n          )\n        );\n      };\n\n      waitForPromiseResult(ast.value);\n    }\n  }, [ast, showKey]);\n\n  if (typeof ast.value === \"number\" || typeof ast.value === \"bigint\") {\n    // Number\n    value = buildValue(\n      ast.key,\n      String(ast.value),\n      styles.number,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"boolean\") {\n    // Boolean\n    value = buildValue(\n      ast.key,\n      String(ast.value),\n      styles.boolean,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"string\") {\n    // String\n    value = buildValue(\n      ast.key,\n      `\"${ast.value}\"`,\n      styles.string,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"undefined\") {\n    // Undefined\n    value = buildValue(\n      ast.key,\n      \"undefined\",\n      styles.undefined,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"symbol\") {\n    // Symbol\n    value = buildValue(\n      ast.key,\n      ast.value.toString(),\n      styles.string,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"function\") {\n    // Function\n    value = buildValue(\n      ast.key,\n      `${ast.value.name}()`,\n      styles.key,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"object\") {\n    if (ast.value === null) {\n      // Null\n      value = buildValue(ast.key, \"null\", styles.null, showKey, ast.depth);\n    } else if (Array.isArray(ast.value)) {\n      // Array\n      value = buildValue(\n        ast.key,\n        `Array(${ast.value.length})`,\n        styles.key,\n        showKey,\n        ast.depth\n      );\n    } else if (ast.value instanceof Date) {\n      // Date\n      value = buildValue(\n        ast.key,\n        `Date ${ast.value.toString()}`,\n        styles.value,\n        showKey,\n        ast.depth\n      );\n    } else if (ast.value instanceof RegExp) {\n      // RegExp\n      value = buildValue(\n        ast.key,\n        ast.value.toString(),\n        styles.regex,\n        showKey,\n        ast.depth\n      );\n    } else if (ast.value instanceof Error) {\n      // Error\n      value = buildValue(\n        ast.key,\n        ast.value.toString(),\n        styles.error,\n        showKey,\n        ast.depth\n      );\n    } else if (isObject(ast.value)) {\n      // Object\n      value = buildValue(ast.key, \"{â€¦}\", styles.key, showKey, ast.depth);\n    } else {\n      // WeakMap, WeakSet, Custom Classes, etc\n      value = buildValue(\n        ast.key,\n        ast.value.constructor.name,\n        styles.key,\n        showKey,\n        ast.depth\n      );\n    }\n  }\n\n  return (\n    <span className={makeClass(themeClass, className)} {...html}>\n      {asyncValue}\n      {value}\n    </span>\n  );\n};\n\nObjectValue.defaultProps = {\n  showKey: true,\n};\n\nexport default ObjectValue;\n"]}
