{"version":3,"sources":["ObjectValue.tsx"],"names":["buildValue","key","value","valueClass","showKey","depth","computedKey","includes","isRoot","styles","text","ObjectValue","props","ast","theme","colorScheme","className","html","themeClass","asyncValue","setAsyncValue","Promise","waitForPromiseResult","promise","String","number","boolean","string","undefined","toString","name","null","Array","isArray","length","Date","RegExp","regex","Error","error","constructor","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport makeClass from \"clsx\";\nimport { ThemeableElement, useTheme } from \"@devtools-ds/themes\";\nimport { ASTNode, isObject, getPromiseState } from \"@devtools-ds/object-parser\";\nimport styles from \"./ObjectInspector.css\";\n\ninterface ObjectValueProps extends ThemeableElement<\"span\"> {\n  /** Type of object. */\n  ast: ASTNode;\n  /** Whether or not to show the key */\n  showKey: boolean;\n}\n\n/**\n * Build the key and value spans\n *\n * @param key - The key string\n * @param value - The value string\n * @param valueClass - The class to apply to the value\n * @param showKey - Whether or not to show the key with the value\n * @param depth - Current depth (so we don't put a key on root)\n */\nconst buildValue = (\n  key: string,\n  value: React.ReactNode,\n  valueClass: string,\n  showKey: boolean,\n  depth: number\n) => {\n  const computedKey = key.includes(\"-\") ? `\"${key}\"` : key;\n  const isRoot = depth <= 0;\n  return (\n    <span className={styles.text}>\n      {!isRoot && showKey && (\n        <>\n          <span className={styles.key}>{computedKey}</span>\n          <span>:&nbsp;</span>\n        </>\n      )}\n\n      <span className={valueClass}>{value}</span>\n    </span>\n  );\n};\n\n/** Display a leaf key-value pair with appropriate styles. */\nexport const ObjectValue = (props: ObjectValueProps) => {\n  const { ast, theme, showKey, colorScheme, className, ...html } = props;\n  const { themeClass } = useTheme({ theme, colorScheme }, styles);\n  const [asyncValue, setAsyncValue] = useState(<span />);\n  let value = <span />;\n\n  /** Handle async types once */\n  useEffect(() => {\n    if (ast.value instanceof Promise) {\n      /** Async function to wait for Promise.race */\n      const waitForPromiseResult = async (promise: Promise<any>) => {\n        setAsyncValue(\n          buildValue(\n            ast.key,\n            `Promise { \"${await getPromiseState(promise)}\" }`,\n            styles.key,\n            showKey,\n            ast.depth\n          )\n        );\n      };\n\n      waitForPromiseResult(ast.value);\n    }\n  }, [ast, showKey]);\n\n  if (typeof ast.value === \"number\" || typeof ast.value === \"bigint\") {\n    // Number\n    value = buildValue(\n      ast.key,\n      String(ast.value),\n      styles.number,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"boolean\") {\n    // Boolean\n    value = buildValue(\n      ast.key,\n      String(ast.value),\n      styles.boolean,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"string\") {\n    // String\n    value = buildValue(\n      ast.key,\n      `\"${ast.value}\"`,\n      styles.string,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"undefined\") {\n    // Undefined\n    value = buildValue(\n      ast.key,\n      \"undefined\",\n      styles.undefined,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"symbol\") {\n    // Symbol\n    value = buildValue(\n      ast.key,\n      ast.value.toString(),\n      styles.string,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"function\") {\n    // Function\n    value = buildValue(\n      ast.key,\n      `${ast.value.name}()`,\n      styles.key,\n      showKey,\n      ast.depth\n    );\n  } else if (typeof ast.value === \"object\") {\n    if (ast.value === null) {\n      // Null\n      value = buildValue(ast.key, \"null\", styles.null, showKey, ast.depth);\n    } else if (Array.isArray(ast.value)) {\n      // Array\n      value = buildValue(\n        ast.key,\n        `Array(${ast.value.length})`,\n        styles.key,\n        showKey,\n        ast.depth\n      );\n    } else if (ast.value instanceof Date) {\n      // Date\n      value = buildValue(\n        ast.key,\n        `Date ${ast.value.toString()}`,\n        styles.value,\n        showKey,\n        ast.depth\n      );\n    } else if (ast.value instanceof RegExp) {\n      // RegExp\n      value = buildValue(\n        ast.key,\n        ast.value.toString(),\n        styles.regex,\n        showKey,\n        ast.depth\n      );\n    } else if (ast.value instanceof Error) {\n      // Error\n      value = buildValue(\n        ast.key,\n        ast.value.toString(),\n        styles.error,\n        showKey,\n        ast.depth\n      );\n    } else if (isObject(ast.value)) {\n      // Object\n      value = buildValue(ast.key, \"{â€¦}\", styles.key, showKey, ast.depth);\n    } else {\n      // WeakMap, WeakSet, Custom Classes, etc\n      value = buildValue(\n        ast.key,\n        ast.value.constructor.name,\n        styles.key,\n        showKey,\n        ast.depth\n      );\n    }\n  }\n\n  return (\n    <span className={makeClass(themeClass, className)} {...html}>\n      {asyncValue}\n      {value}\n    </span>\n  );\n};\n\nObjectValue.defaultProps = {\n  showKey: true,\n};\n\nexport default ObjectValue;\n"]}
