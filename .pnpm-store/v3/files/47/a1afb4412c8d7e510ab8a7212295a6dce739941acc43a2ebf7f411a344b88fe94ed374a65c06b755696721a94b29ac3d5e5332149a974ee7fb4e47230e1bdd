{"version":3,"sources":["debounce.ts"],"names":["WINDOW_RESIZE_DELAY","debounce","func","wait","immediate","timeout","x","args","later","callNow","clearTimeout","setTimeout"],"mappings":"AAKA,MAAO,IAAMA,CAAAA,mBAAmB,CAAG,GAA5B,CAeP,MAAO,SAASC,CAAAA,QAAT,CACLC,IADK,CAIC,IAFNC,CAAAA,IAEM,2DAFCH,mBAED,IADNI,CAAAA,SACM,2DADM,KACN,CACN,GAAIC,CAAAA,OAAJ,CAEA,MAAO,SAASC,CAAAA,CAAT,EAA0B,+BAAZC,IAAY,0CAAZA,IAAY,uBAE/B,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClBH,OAAO,CAAG,IAAV,CAEA,GAAI,CAACD,SAAL,CAAgBF,IAAI,MAAJ,QAAQK,IAAR,CACjB,CAJD,CAMA,GAAME,CAAAA,OAAO,CAAGL,SAAS,EAAI,CAACC,OAA9B,CAEA,GAAIA,OAAJ,CAAa,CACXK,YAAY,CAACL,OAAD,CACb,CAEDA,OAAO,CAAGM,UAAU,CAACH,KAAD,CAAQL,IAAR,CAApB,CAEA,GAAIM,OAAJ,CAAaP,IAAI,MAAJ,QAAQK,IAAR,CACd,CACF","sourcesContent":["// https://davidwalsh.name/javascript-debounce-function\n\ntype Args = any[];\ntype Base = (...args: Args) => void;\n\nexport const WINDOW_RESIZE_DELAY = 150;\n\n/**\n * Only call a function once every 'wait\" seconds.\n *\n * @param func - the callback to debounce\n * @param wait - how long to wait until to run the callback\n * @param immediate - run the callback immediately\n *\n * @example\n * const onClick = debounce(\n *   () => console.log('I was clicked'),\n *   1000\n * );\n */\nexport function debounce(\n  func: Base,\n  wait = WINDOW_RESIZE_DELAY,\n  immediate = false\n): Base {\n  let timeout: NodeJS.Timeout | null;\n\n  return function x(...args: Args) {\n    /** The function that actually runs the user's function. */\n    const later = () => {\n      timeout = null;\n\n      if (!immediate) func(...args);\n    };\n\n    const callNow = immediate && !timeout;\n\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(later, wait);\n\n    if (callNow) func(...args);\n  };\n}\n"]}
