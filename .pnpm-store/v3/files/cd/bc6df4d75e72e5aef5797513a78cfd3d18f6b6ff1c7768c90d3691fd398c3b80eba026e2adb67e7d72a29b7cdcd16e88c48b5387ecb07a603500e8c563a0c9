{"version":3,"sources":["isReactInstanceOf.ts"],"names":["isReactInstanceOf","element","component","isComponent","type","renderFn","render","prototype"],"mappings":"kHAkBO,QAASA,CAAAA,iBAAT,CAGLC,OAHK,CAILC,SAJK,CAKL,CACA,GAAMC,CAAAA,WAAW,CACfF,OAAO,EAAIA,OAAO,CAACG,IAAnB,EAA2B,MAAOH,CAAAA,OAAO,CAACG,IAAf,GAAwB,QADrD,CAIA,GAAIH,OAAO,EAAIA,OAAO,CAACG,IAAR,GAAiBF,SAAhC,CAA2C,CACzC,MAAO,KACR,CAED,GAAMG,CAAAA,QAAQ,CAAG,UAAYH,CAAAA,SAAZ,CAAwBA,SAAS,CAACI,MAAlC,CAA2CJ,SAA5D,CAEA,MACEC,CAAAA,WAAW,EACXF,OAAO,CAACG,IAAR,CAAaG,SADb,EAEAF,QAAQ,CAACE,SAFT,EAGAN,OAAO,CAACG,IAAR,CAAaG,SAAb,WAAkCF,CAAAA,QAErC","sourcesContent":["import * as React from 'react';\n\ntype Renderable<Props> =\n  | React.ComponentType<Props>\n  | {\n      /** a function to render the component */\n      render: React.ComponentType<Props>;\n    };\n\n/**\n * Determine whether a HTML element is an instance of a React component.\n *\n * @param element - Element to check the instance of\n * @param component - The component to check for\n *\n * @example\n * isReactInstanceOf(child, MyComponent)\n */\nexport function isReactInstanceOf<Props>(\n  // IDK how to get rid of this any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  element: any,\n  component: Renderable<Props>\n) {\n  const isComponent =\n    element && element.type && typeof element.type !== 'string';\n\n  // For functional types\n  if (element && element.type === component) {\n    return true;\n  }\n\n  const renderFn = 'render' in component ? component.render : component;\n\n  return (\n    isComponent &&\n    element.type.prototype &&\n    renderFn.prototype &&\n    element.type.prototype instanceof renderFn\n  );\n}\n"]}
