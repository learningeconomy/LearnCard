name: Docker Release

on:
  release:
    types: [published]

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  CI: true
  LEARN_CLOUD_SEED: ${{ secrets.LEARN_CLOUD_SEED }}
  LEARN_CLOUD_MONGO_URI: ${{ secrets.LEARN_CLOUD_MONGO_URI }}
  LEARN_CLOUD_MONGO_DB_NAME: ${{ secrets.LEARN_CLOUD_MONGO_DB_NAME }}

jobs:
  push-to-registry:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Restore nx cache
        id: restore-nx-cache
        uses: actions/cache/restore@v3
        with:
          path: .nx-cache
          key: ${{ runner.os }}-nx-cache-${{ github.workflow }}

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: pnpm exec nx affected --target=test --base=HEAD~1 --head=HEAD
        env:
          SEED: ${{ secrets.SEED }}
          LEARN_CLOUD_SEED: ${{ secrets.LEARN_CLOUD_SEED }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Brain Service
        id: brain-service-meta
        uses: docker/metadata-action@v5
        with:
          images: welibrary/lcn-brain-service

      - name: Build and push Brain Service image
        id: push-brain-service
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./services/learn-card-network/brain-service/Dockerfile
          push: true
          tags: ${{ steps.brain-service-meta.outputs.tags }}
          labels: ${{ steps.brain-service-meta.outputs.labels }}

      - name: Generate artifact attestation for Brain Service
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: welibrary/lcn-brain-service
          subject-digest: ${{ steps.push-brain-service.outputs.digest }}
          push-to-registry: true

      - name: Extract metadata for Cloud Service
        id: cloud-service-meta
        uses: docker/metadata-action@v5
        with:
          images: welibrary/lcn-cloud-service

      - name: Build and push Cloud Service image
        id: push-cloud-service
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./services/learn-card-network/learn-cloud-service/Dockerfile
          push: true
          tags: ${{ steps.cloud-service-meta.outputs.tags }}
          labels: ${{ steps.cloud-service-meta.outputs.labels }}

      - name: Generate artifact attestation for Cloud Service
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: welibrary/lcn-cloud-service
          subject-digest: ${{ steps.push-cloud-service.outputs.digest }}
          push-to-registry: true

      - name: Save nx cache
        uses: actions/cache/save@v3
        with:
          path: .nx-cache
          key: ${{ steps.restore-nx-cache.outputs.cache-primary-key }}
