name: Deploy

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  CI: true
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  SEED: ${{ secrets.SEED }}
  NEO4J_URI: ${{ secrets.NEO4J_URI }}
  NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}
  NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  DD_ENV: ${{ secrets.DD_ENV }}
  DD_SERVICE: ${{ secrets.DD_SERVICE }}
  DD_SITE: ${{ secrets.DD_SITE }}
  DD_VERSION: ${{ secrets.DD_VERSION }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Fetch main for NX comparison
        run: |
          git fetch --no-tags --prune --depth=5 origin main

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Restore nx cache
        id: restore-nx-cache
        uses: actions/cache/restore@v3
        with:
          path: .nx-cache
          key: ${{ runner.os }}-nx-cache-${{ github.workflow }}

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm exec nx affected --target=test --base=HEAD~1 --head=HEAD
        env:
          SEED: ${{ secrets.SEED }}

      - name: Get Affected List
        id: affected
        run: echo "AFFECTED=$(pnpm exec nx print-affected --base=HEAD~1 --head=HEAD --select=projects)" >> $GITHUB_ENV

      - name: Deploy Brain Service Lambda
        if: contains(env.AFFECTED, 'network-brain-service')
        run: pnpm exec nx serverless-deploy network-brain-service --stage production

      - name: Save nx cache
        uses: actions/cache/save@v3
        with:
          path: .nx-cache
          key: ${{ steps.restore-nx-cache.outputs.cache-primary-key }}
